pipeline {
    agent{
        label "mac2"
    }

    options {
        timeout(time: 20, unit: 'MINUTES')
        timestamps() 
    }

    stages {
        stage ('Test') {
            parallel {
                stage ('Linter') {
                    steps {
                        dir('backend') {
                            sh "docker run --rm -i hadolint/hadolint < Dockerfile"
                            sh "docker run --rm -v \$(pwd):/apps alpine/flake8:3.5.0 --max-line-length=120 *.py"
                        }
                    }
                }
                stage ('Unit tests') {
                    steps {
                        script {
                            version = readFile('__VERSION__').trim()
                        }
                        dir('backend') {
                            sh "docker build --no-cache -t backend-test:${version}  -f Dockerfile.test ."
                            sh "docker run  --name backend-test-${version} backend-test:${version}"
                            sh "docker cp backend-test-${version}:/app/test_results.xml ./test_results.xml"
                            sh "docker rm backend-test-${version}"
                            junit './test_results.xml'
                        }
                    }
                }
            }
        }     
    }
    

    post {
        cleanup {
            cleanWs()
        }

        always {
            echo "This will always run"
        }
        
        success {
            echo "This will run only if successful"
                script {
                    if (currentBuild.currentResult == 'SUCCESS') {
                        emailext subject: '$DEFAULT_SUBJECT',
                            body: '$DEFAULT_CONTENT',
                            recipientProviders: [
                                [$class: 'CulpritsRecipientProvider'],
                                [$class: 'DevelopersRecipientProvider'],
                                [$class: 'RequesterRecipientProvider']
                            ], 
                            replyTo: '$DEFAULT_REPLYTO',
                            to: '$DEFAULT_RECIPIENTS'
                    }
                }
        }

        failure {
            echo "This will run only if failed"
            echo "This will run only if successful"
                script {
                    if (currentBuild.currentResult == 'SUCCESS') {
                        emailext subject: '$DEFAULT_SUBJECT',
                            body: '$DEFAULT_CONTENT',
                            recipientProviders: [
                                [$class: 'CulpritsRecipientProvider'],
                                [$class: 'DevelopersRecipientProvider'],
                                [$class: 'RequesterRecipientProvider']
                            ], 
                            replyTo: '$DEFAULT_REPLYTO',
                            to: '$DEFAULT_RECIPIENTS'
                    }
                }          
        }
    }
}


